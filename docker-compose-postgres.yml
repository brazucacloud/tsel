services:
  app:
    build: .
    environment:
      - NODE_ENV=production
      - PORT=3000
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=tsel_db
      - POSTGRES_USER=tsel_user
      - POSTGRES_PASSWORD=tsel_password
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      - JWT_EXPIRES_IN=7d
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./backups:/app/backups
    restart: unless-stopped
    networks:
      - chip-warmup-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=tsel_db
      - POSTGRES_USER=tsel_user
      - POSTGRES_PASSWORD=tsel_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - chip-warmup-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tsel_user -d tsel_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - chip-warmup-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - chip-warmup-network

volumes:
  postgres_data:
  redis_data:

networks:
  chip-warmup-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: "1442"

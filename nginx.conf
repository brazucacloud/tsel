user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  # Resolver do Docker para serviços do compose
  resolver 127.0.0.11 ipv6=off valid=30s;
  # Usar variável para resolver em tempo de execução (evita falha na inicialização)
  set $upstream "http://app:3000";
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;
  server_tokens off;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Increase proxy buffers for larger responses if needed
    proxy_buffers 16 16k;
    proxy_buffer_size 32k;

    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass $upstream;
    }
  }

  # Optional HTTPS block (requires certs mounted at /etc/nginx/ssl)
  # server {
  #   listen 443 ssl http2;
  #   server_name _;
  #   ssl_certificate     /etc/nginx/ssl/fullchain.pem;
  #   ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  #   location / {
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_pass http://tsel_app;
  #   }
  # }
}


